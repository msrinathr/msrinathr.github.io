{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/python-virtualenv-setup-windows/","webpackCompilationHash":"5a41efb1c530ad28e21a","result":{"data":{"site":{"siteMetadata":{"title":"Blog by Srinath Muskula","subtitle":"Engineer, writing about topics related to technology","copyright":"© Ask me how to copy","menu":[{"label":"Articles","path":"/"},{"label":"About me","path":"/about/"},{"label":"Contact me","path":"/contact/"}],"author":{"name":"Srinath Muskula","email":"srinath@muskula.xyz","twitter":"redmusk","github":"msrinathr","linkedin":"msrinathr"},"disqusShortname":"muskula","siteUrl":"http://muskula.xyz"}},"markdownRemark":{"id":"2154db2d-7378-5412-9a52-963dfeea8e1b","html":"<p>Recently, I switched from Mac to Windows laptop. I installed python 3.x and was thinking to build an application using Django.\nIt’s always a good practice to use virtualenv when working on multiple projects. Installing various packages specific to each project clutters your machine and need clean up activity later on.\nWith virtualenv you can use version specific packages and later on clean up would be very as you don’t want to keep unused packages on machine.</p>\n<p>I was familiar about how to use virtualenv on Mac, I couldn’t find much information on how to setup virtualenv for windows, commands to activate and deactivate.</p>\n<p>Assuming you have aleady installed python on windows, you might have already installed pip along with python. Check pip installation using cmd(command) window by typing:  </p>\n<p><code class=\"language-text\">pip --version</code></p>\n<p>If pip is not installed go to <strong>Settings > Apps > Python</strong>, open to change the installation, include pip and save to install necessary pip files. </p>\n<p><em>Steps to install virtualenv and activate:</em></p>\n<ul>\n<li>Check/Install Python and pip</li>\n<li>Install virtualenv</li>\n<li>Install virtualenvwrapper-win</li>\n<li>Create virtual env (mkvirtualenv project101)</li>\n<li>Set project directory (setprojectdir)</li>\n<li>Deactivate virtual env (deactivate)</li>\n<li>Reactivating previous virtual env (workon project101)</li>\n</ul>\n<p>Once you have confirmed that pip is installed on your machine.  Install virtualenv using this command:  </p>\n<p><code class=\"language-text\">pip install virtualenv</code></p>\n<p>If this was for Mac, you can use virtualenv directly. Since it’s windows, we have to install a wrapper on top of the virtualenv, this can be installed by  </p>\n<p><code class=\"language-text\">pip install virtualenvwrapper-win</code></p>\n<p>Create virtualenv for the project with this command <code class=\"language-text\">mkvirtualenv project101</code> in this project101 is your custom project name.</p>\n<p>Create a project folder, navigate to the folder and set the current directory as project folder </p>\n<p><code class=\"language-text\">setprojectdir</code></p>\n<p>Install packages required for your project, these packages are specific to this virtualenv.</p>\n<p>You can exit out of the virtualenv by deactivating </p>\n<p><code class=\"language-text\">deactivate</code></p>\n<p>To continue with existing virtualenv use workon as </p>\n<p><code class=\"language-text\">workon project101</code> </p>\n<p>Hope this helps you to setup python virtualenv on windows and get started on your exciting py project.</p>\n<hr>","fields":{"tagSlugs":["/tags/python/","/tags/windows/"],"slug":"/posts/python-virtualenv-setup-windows/"},"frontmatter":{"title":"Python Virtualenv Setup on Windows","tags":["Python","Windows"],"date":"2019-06-18T14:10:00.121Z","description":"Steps to guide how to install and setup python virtualenv on windows machine"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/python-virtualenv-setup-windows/"}}}